{"version":3,"sources":["Header.js","Item.js","filter.js","Footer.js","App.js","index.js","Model.js"],"names":["Header","handleKeyDown","e","keyCode","target","value","length","title","props","addToDo","className","style","type","placeholder","autoFocus","onKeyDown","this","React","Component","Item","todo","checked","completed","onChange","toggle","id","textDecoration","onClick","remove","ALL","Footer","activeTodoCount","filter","changeFilter","completedTodoCount","clearCompleted","App","setState","state","todos","model","reduce","count","showTodos","main","toggleAll","map","index","key","subscribe","listener","listeners","push","emit","forEach","notify","localStorage","setItem","storeKey","JSON","stringify","Date","now","findIndex","splice","getItem","parse","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d4c8d5bf.chunk.js","sourcesContent":["import React from 'react';\r\nclass Header extends React.Component {\r\n    handleKeyDown = (e) => {\r\n        if (e.keyCode === 13 && e.target.value != null && e.target.value.length > 0) { //enter\r\n            let title = e.target.value\r\n            this.props.addToDo({ title })\r\n            e.target.value = ''  //输入框清空\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='form-group'>\r\n                <h1 style={{'textAlign': 'center', 'marginBottom': '20px'}}>待办事项</h1>\r\n                <input type='text' \r\n                className='form-control' \r\n                placeholder='输入后按回车保存' \r\n                autoFocus={true} \r\n                onKeyDown={this.handleKeyDown}></input>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Header;","import React from 'react';\r\nclass Item extends React.Component {\r\n    render() {\r\n        let todo = this.props.todo\r\n        return (\r\n            <div>\r\n                <li className='list-group-item'>\r\n                    <div className='row'>\r\n                        <div className='col-md-1'>\r\n                            <input type='checkbox' \r\n                            checked={todo.completed} \r\n                            onChange={() => this.props.toggle(todo.id)} />\r\n                        </div>\r\n                        <div className='col-md-10' \r\n                        style={{ textDecoration: todo.completed ? 'line-through' : '' }} >\r\n                            {todo.title}\r\n                        </div>\r\n                        <div className='col-md-1'>\r\n                            <button className='btn btn-danger btn-xs' \r\n                            onClick={() => this.props.remove(todo.id)} >x</button>\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Item;\r\n","export const ALL = 'all'\r\nexport const ACTIVE = 'active'\r\nexport const COMPLETED = 'completed'","import React from 'react';\r\nimport * as filter from './filter'  //*为取出的变量作为filter的属性\r\n\r\nclass Footer extends React.Component {\r\n    render() {\r\n        return (\r\n                <div className='row' style={{ 'textAlign': 'center', 'marginTop': '10px' }}>\r\n\r\n                    <div className=\"col-md-4\" style={{ 'textAlign': 'left' }}>\r\n                        {\r\n                            this.props.activeTodoCount > 0 ?\r\n                                <button className=\"btn btn-primary\" type=\"button\">\r\n                                    你有 <span className=\"badge\">{this.props.activeTodoCount}</span> 件待办\r\n                                </button>\r\n                                : null\r\n                        }\r\n                    </div>\r\n\r\n                    <div className=\"col-md-5\">\r\n                        <button className={`${this.filter === filter.ALL ? 'btn-success' : 'btn-default'} btn-sm`} onClick={() => this.props.changeFilter(filter.ALL)} style={{ 'margin': '0 5px' }}>全部</button>\r\n                        <button className={`${this.filter === filter.ACTIVE ? 'btn-success' : 'btn-default'} btn-sm`} onClick={() => this.props.changeFilter(filter.ACTIVE)} style={{ 'margin': '0 5px' }}>未完成</button>\r\n                        <button className={`${this.filter === filter.COMPLETED ? 'btn-success' : 'btn-default'} btn-sm`} onClick={() => this.props.changeFilter(filter.COMPLETED)} style={{ 'margin': '0 5px' }}>已完成</button>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-3\" style={{ 'textAlign': 'right' }}>\r\n                        {\r\n                            this.props.completedTodoCount > 0 ?\r\n                                <button className='btn btn-danger' onClick={this.props.clearCompleted}>删除已完成</button>\r\n                                : null\r\n                        }\r\n                    </div>\r\n\r\n                </div>\r\n        )\r\n    }\r\n}\r\nexport default Footer;","import React from 'react';\nimport Header from './Header'\nimport Item from './Item'\nimport Footer from './Footer'\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport * as filter from './filter'  //*为取出的变量作为filter的属性\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      filter: filter.ALL,\n    }\n  }\n  changeFilter = (filter) => {\n    this.setState({ filter })\n  }\n  render() {\n    let todos = this.props.model.todos\n    let activeTodoCount = todos.reduce((count, todo) =>\n      count + (todo.completed ? 0 : 1), 0)\n    let completedTodoCount = todos.length - activeTodoCount\n    let showTodos = todos.filter((todo) => {\n      switch (this.state.filter) {\n        case filter.ACTIVE:  //显示未完成\n          return !todo.completed\n        case filter.COMPLETED:  //显示已完成\n          return todo.completed\n        default:\n          return true\n      }\n    })\n    let main = (\n      <ul className='list-group'>\n        {\n          todos.length > 0 ? <li className='list-group-item'>\n            <input type='checkbox'\n              checked={activeTodoCount === 0}\n              onChange={this.props.model.toggleAll} />\n            {activeTodoCount === 0 ? '反选' : '全选'}\n          </li> : null\n        }\n        {\n          showTodos.map((todo, index) =>\n            <Item key={index}\n              todo={todo}\n              toggle={this.props.model.toggle}\n              remove={this.props.model.remove} />\n          )\n        }\n      </ul>\n    )\n    return (\n      <div className='container'>\n        <div className='row'>\n          <div className=\"col-md-3\"></div>\n          <div className='col-md-6'>\n            <div className='panel panel-default'>\n              <div className='panel-header'>\n                <Header addToDo={this.props.model.addToDo} />\n              </div>\n              <div className='panel-body'>\n                {main}\n              </div>\n              <div className='panel-footer'>\n                <Footer activeTodoCount={activeTodoCount}\n                  changeFilter={this.changeFilter}\n                  filter={this.state.filter}\n                  clearCompleted={this.props.model.clearCompleted}\n                  completedTodoCount={completedTodoCount} />\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-3\"></div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport Model from './Model'\nlet model = new Model()\nfunction render(){\n    ReactDOM.render(<App model={model}/>, document.getElementById('root'));\n}\nmodel.subscribe(render)\nrender()","class Model {\r\n    constructor() {\r\n        this.storeKey = 'todos'\r\n        this.todos = localStorage.getItem(this.storeKey) ?\r\n            JSON.parse(localStorage.getItem(this.storeKey)) : []\r\n        this.listeners = []\r\n    }\r\n\r\n    subscribe = (listener) => {\r\n        this.listeners.push(listener)\r\n    }\r\n    emit = () => {\r\n        this.listeners.forEach(listener => listener())\r\n    }\r\n    notify = (todos) => {\r\n        localStorage.setItem(this.storeKey, JSON.stringify(todos))\r\n        this.todos = todos\r\n        this.emit()\r\n    }\r\n    addToDo = (todo) => {\r\n        todo.id = Date.now()\r\n        todo.completed = false\r\n        let todos = this.todos\r\n        todos.push(todo)\r\n        this.notify(todos)\r\n    }\r\n    toggle = (id) => {\r\n        let todos = this.todos\r\n        todos = todos.map(todo => {\r\n            if (todo.id === id) {\r\n                todo.completed = !todo.completed\r\n            }\r\n            return todo\r\n        })\r\n        this.notify(todos)\r\n    }\r\n    remove = (id) => {\r\n        let todos = this.todos\r\n        let index = todos.findIndex(todo => todo.id === id)\r\n        todos.splice(index, 1)\r\n        this.notify(todos)\r\n    }\r\n    toggleAll = (e) => {\r\n        let checked = e.target.checked\r\n        let todos = this.todos\r\n        todos = todos.map(todo => {\r\n            todo.completed = checked\r\n            return todo\r\n        })\r\n        this.notify(todos)\r\n    }\r\n    clearCompleted = () => {\r\n        let todos = this.todos\r\n        todos = todos.filter(todo => !todo.completed)\r\n        this.notify(todos)\r\n    }\r\n\r\n}\r\nexport default Model"],"sourceRoot":""}